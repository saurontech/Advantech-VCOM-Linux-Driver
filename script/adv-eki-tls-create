#!/bin/bash


ROOTCA_PATH=/usr/local/advtty
ROOTCA_NAME=rootCA
ROOTCA_PUB="$ROOTCA_PATH/$ROOTCA_NAME.pem"
ROOTCA_PRIV="$ROOTCA_PATH/$ROOTCA_NAME.key"
ROOTCA_SERIAL="$ROOTCA_PATH/$ROOTCA_NAME.srl"
EKI=
PASSPHRASE=

usage()
{
cat << EOF
usage $0 options

This script creates the PEM key-pair and diffi-hellman needed by the EKI device server to operate TLS mode

OPTIONS:
	-h	Show this message
	-n	PEM output file name(without sub filename)
	-k	RootCA private key(default:$ROOTCA_PRIV)
	-p	RootCA public key(default:$ROOTCA_PUB)
	-s	RootCA serial(default:$ROOTCA_SERIAL)
	-e	Encyption Pass-Phrase(Password) for the PEM output

EXAMPLE:
	$0 -n EKI1
	$0 -n EKI1 -k ./rootCA.key -p ./rootCA.pem -s ./rootCA.srl

EOF
}

createkey()
{
DH_FILENAME="${EKI}_dh1024.pem"
PUB_KEY="${EKI}_cert.pem"
UNSIGNED_PUB="${EKI}_pub.pem"
PRIV_KEY_NOPASS="${EKI}_nopass.key"
PRIV_KEY="$EKI.key"
CSR="$EKI.csr"
DSA="${EKI}dsa.pem"
KEYPAIR="$EKI.pem"

#check for rootCA files
echo "checking for rootCA files:"
if [ -f "$ROOTCA_PUB" ]
then
	echo "public key $ROOTCA_PUB found."
else
	echo "$ROOTCA_PUB not found."
	exit 1
fi

if [ -f "$ROOTCA_PRIV" ]
then
	echo "private key $ROOTCA_PRIV found."
else
	echo "$ROOTCA_PRIV not found."
	exit 1
fi

if [ -f "$ROOTCA_SERIAL" ]
then
	echo "serial $ROOTCA_SERIAL found."
else
	echo "$ROOTCA_SERIAL not found."
	exit 1
fi

#create DH
`openssl dhparam -out $DH_FILENAME 1024`

#create private key
`openssl ecparam -name prime256v1 -out s_prime256v1.pem`
if [[ -z "$PASSPHRASE" ]]
then
`openssl ecparam -in s_prime256v1.pem -genkey -noout -out $PRIV_KEY`
else
#echo "passphrase = $PASSPHRASE."
`openssl ecparam -in s_prime256v1.pem -genkey |openssl ec -passout pass:$PASSPHRASE -out $PRIV_KEY -aes256`
fi

#create CSR
`openssl dsaparam -genkey -out serverdsa.pem 1024`
`openssl req -new -key serverdsa.pem -out $CSR`

#create unsigned pub key
`openssl ec -in $PRIV_KEY -passin pass:$PASSPHRASE -pubout -out $UNSIGNED_PUB`

#sign public key
`openssl x509 -req -days 1024 -in $CSR -CAkey $ROOTCA_PRIV -CA $ROOTCA_PUB -force_pubkey $UNSIGNED_PUB -out $PUB_KEY -CAserial $ROOTCA_SERIAL`

#create key pair
`cat $PUB_KEY  $PRIV_KEY> $KEYPAIR`
}

while getopts “hn:k:p:s:e:” OPTION
do
	case $OPTION in
		h)
			usage
			exit 1
			;;
		k)
			ROOTCA_PRIV=$OPTARG
			;;
		p)
			ROOTCA_PUB=$OPTARG
			;;
		s)
			ROOTCA_SERIAL=$OPTARG
			;;
		n)
			EKI=$OPTARG
			;;
		e)
			PASSPHRASE=$OPTARG
			;;
		?)
			;;	
			
	esac
done

if [[ -z $EKI ]]
then
	usage
	exit 1
fi

createkey

echo ""
echo "---"
echo "Copy the following files to the corresponding EKI device server"
echo ""
echo "* key-pair(pub/priv): $KEYPAIR "
echo "* diffi-hellman: $DH_FILENAME"
echo "* rootCA: $ROOTCA_PUB"
echo ""

